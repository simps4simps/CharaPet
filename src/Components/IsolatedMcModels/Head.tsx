/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 head.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { GLTF } from "three-stdlib";

import { Texture } from "../../Utils/Types/Types";
import { Model3D } from "../../Utils/Interfaces/Interfaces";

type GLTFResult = GLTF & {
  nodes: {
    Head: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

export const Head: React.FC<Model3D> = ({ texture }) => {
  const { nodes, materials } = useGLTF("Models/head.glb") as GLTFResult;

  return (
    <group dispose={null}>
      <mesh geometry={nodes.Head.geometry} position={[0, -5.59, 0]}>
        <meshStandardMaterial map={useTexture(texture)} />
      </mesh>
    </group>
  );
};

useGLTF.preload("Models/head.glb");
