/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 McMan.glb -t
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { PerspectiveCamera, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Canvas } from "@react-three/fiber";

import CameraHelper from "../../Utils/CameraHelper";
import AnglesToRadians from "../../Utils/AngelsToRadians";

type GLTFResult = GLTF & {
  nodes: {
    Head: THREE.Mesh;
    Body: THREE.Mesh;
    Arms: THREE.Mesh;
    Legs: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("Models/McMan.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Head.geometry} material={materials.Material} />
      <mesh geometry={nodes.Body.geometry} material={materials.Material} />
      <mesh geometry={nodes.Arms.geometry} material={materials.Material} />
      <mesh geometry={nodes.Legs.geometry} material={materials.Material} />
    </group>
  );
}

export const McMan = () => {
  return (
    <Canvas
      style={{
        width: "50%",
        height: "50%",
      }}
      shadows
    >
      <Model rotation={[AnglesToRadians(20), AnglesToRadians(-25), 0]} />
      <ambientLight intensity={0.4} />
      <directionalLight intensity={1} position={[0, 10, 10]} />
      <PerspectiveCamera makeDefault position={[0, 3, 10]} />
    </Canvas>
  );
};

useGLTF.preload("Models/McMan.glb");
